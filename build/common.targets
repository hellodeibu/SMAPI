<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- load dev settings -->
  <Import Condition="$(OS) != 'Windows_NT' AND Exists('$(HOME)\stardewvalley.targets')" Project="$(HOME)\stardewvalley.targets" />
  <Import Condition="$(OS) == 'Windows_NT' AND Exists('$(USERPROFILE)\stardewvalley.targets')" Project="$(USERPROFILE)\stardewvalley.targets" />

  <!-- find game path -->
  <PropertyGroup>
    <!-- Linux paths -->
    <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/GOG Games/Stardew Valley/game</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.local/share/Steam/steamapps/common/Stardew Valley</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Stardew Valley</GamePath>

    <!-- Mac paths -->
    <GamePath Condition="!Exists('$(GamePath)')">/Applications/Stardew Valley.app/Contents/MacOS</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Stardew Valley/Contents/MacOS</GamePath>

    <!-- Windows paths -->
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\GalaxyClient\Games\Stardew Valley</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\GOG Galaxy\Games\Stardew Valley</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Stardew Valley</GamePath>

    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\GalaxyClient\Games\Stardew Valley</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\GOG Galaxy\Games\Stardew Valley</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Stardew Valley</GamePath>

    <GamePath Condition="!Exists('$(GamePath)') AND '$(OS)' == 'Windows_NT'">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\GOG.com\Games\1453375253', 'PATH', null, RegistryView.Registry32))</GamePath>
    <GamePath Condition="!Exists('$(GamePath)') AND '$(OS)' == 'Windows_NT'">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 413150', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>

    <!--compile constants -->
    <DefineConstants Condition="$(OS) == 'Windows_NT'">$(DefineConstants);SMAPI_FOR_WINDOWS</DefineConstants>
  </PropertyGroup>

  <!-- add common references -->
  <ItemGroup>
    <Reference Condition="'$(OS)' == 'Windows_NT' AND '$(MSBuildProjectName)' != 'SMAPI.Toolkit' AND '$(MSBuildProjectName)' != 'SMAPI.Toolkit.CoreInterfaces'" Include="System.Management" />
  </ItemGroup>

  <!-- add game references-->
  <Choose>
    <When Condition="'$(MSBuildProjectName)' == 'SMAPI' OR '$(MSBuildProjectName)' == 'SMAPI.Mods.ConsoleCommands' OR '$(MSBuildProjectName)' == 'SMAPI.Mods.SaveBackup' OR '$(MSBuildProjectName)' == 'SMAPI.Tests'">
      <Choose>
        <!-- Windows -->
        <When Condition="$(OS) == 'Windows_NT'">
          <PropertyGroup>
            <!--recognise XNA Framework DLLs in the GAC-->
            <AssemblySearchPaths>$(AssemblySearchPaths);{GAC}</AssemblySearchPaths>
          </PropertyGroup>

          <ItemGroup>
            <Reference Include="Stardew Valley">
              <HintPath>$(GamePath)\Stardew Valley.exe</HintPath>
              <Private Condition="'$(MSBuildProjectName)' != 'SMAPI.Tests'">False</Private>
            </Reference>
            <Reference Include="StardewValley.GameData">
              <HintPath>$(GamePath)\StardewValley.GameData.dll</HintPath>
              <Private Condition="'$(MSBuildProjectName)' != 'SMAPI.Tests'">False</Private>
            </Reference>
            <Reference Include="Netcode">
              <HintPath>$(GamePath)\Netcode.dll</HintPath>
              <Private Condition="'$(MSBuildProjectName)' != 'SMAPI.Tests'">False</Private>
            </Reference>
            <Reference Include="Microsoft.Xna.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553, processorArchitecture=x86">
              <Private>False</Private>
            </Reference>
            <Reference Include="Microsoft.Xna.Framework.Game, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553, processorArchitecture=x86">
              <Private>False</Private>
            </Reference>
            <Reference Include="Microsoft.Xna.Framework.Graphics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553, processorArchitecture=x86">
              <Private>False</Private>
            </Reference>
            <Reference Include="Microsoft.Xna.Framework.Xact, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553, processorArchitecture=x86">
              <Private>False</Private>
            </Reference>
          </ItemGroup>
        </When>

        <!-- Linux/Mac -->
        <Otherwise>
          <ItemGroup>
            <Reference Include="StardewValley">
              <HintPath>$(GamePath)\StardewValley.exe</HintPath>
              <Private>False</Private>
            </Reference>
            <Reference Include="StardewValley.GameData.MonoGame">
              <HintPath>$(GamePath)\StardewValley.GameData.MonoGame.dll</HintPath>
              <Private Condition="'$(MSBuildProjectName)' != 'SMAPI.Tests'">False</Private>
            </Reference>
            <Reference Include="MonoGame.Framework">
              <HintPath>$(GamePath)\MonoGame.Framework.dll</HintPath>
              <Private>False</Private>
            </Reference>
          </ItemGroup>
        </Otherwise>
      </Choose>

      <!-- common -->
      <ItemGroup>
        <Reference Include="GalaxyCSharp">
          <HintPath>$(GamePath)\GalaxyCSharp.dll</HintPath>
          <Private>False</Private>
        </Reference>
        <Reference Include="Lidgren.Network">
          <HintPath>$(GamePath)\Lidgren.Network.dll</HintPath>
          <Private>False</Private>
        </Reference>
        <Reference Include="xTile">
          <HintPath>$(GamePath)\xTile.dll</HintPath>
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>

  <!-- if game path is invalid, show one user-friendly error instead of a slew of reference errors -->
  <Target Name="ValidateInstallPath" AfterTargets="BeforeBuild">
    <Error Condition="!Exists('$(GamePath)')" Text="Failed to find the game install path automatically; edit the *.csproj file and manually add a &lt;GamePath&gt; setting with the full directory path containing the Stardew Valley executable." />
  </Target>

  <!-- copy files into game directory and enable debugging -->
  <Target Name="CopySmapiFiles" AfterTargets="AfterBuild">
    <CallTarget Targets="CopySMAPI;CopyDefaultMods" />
  </Target>
  <Target Name="CopySMAPI" Condition="'$(MSBuildProjectName)' == 'SMAPI'">
    <Copy SourceFiles="$(TargetDir)\$(TargetName).exe" DestinationFolder="$(GamePath)" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).xml" DestinationFolder="$(GamePath)" />
    <Copy SourceFiles="$(TargetDir)\SMAPI.config.json" DestinationFiles="$(GamePath)\smapi-internal\config.json" />
    <Copy SourceFiles="$(TargetDir)\SMAPI.metadata.json" DestinationFiles="$(GamePath)\smapi-internal\metadata.json" />
    <Copy SourceFiles="$(TargetDir)\0Harmony.dll" DestinationFolder="$(GamePath)\smapi-internal" />
    <Copy SourceFiles="$(TargetDir)\Newtonsoft.Json.dll" DestinationFolder="$(GamePath)\smapi-internal" />
    <Copy SourceFiles="$(TargetDir)\Mono.Cecil.dll" DestinationFolder="$(GamePath)\smapi-internal" />
  </Target>
  <Target Name="CopyDefaultMods" Condition="'$(MSBuildProjectName)' == 'SMAPI.Mods.ConsoleCommands' OR '$(MSBuildProjectName)' == 'SMAPI.Mods.SaveBackup'">
    <Copy SourceFiles="$(TargetDir)\$(TargetName).dll" DestinationFolder="$(GamePath)\Mods\$(AssemblyName)" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)\Mods\$(AssemblyName)" Condition="Exists('$(TargetDir)\$(TargetName).pdb')" />
    <Copy SourceFiles="$(TargetDir)\manifest.json" DestinationFolder="$(GamePath)\Mods\$(AssemblyName)" />
  </Target>
  <Target Name="CopyToolkit" Condition="'$(MSBuildProjectName)' == 'SMAPI.Toolkit' AND $(TargetFramework) == 'net4.5'" AfterTargets="PostBuildEvent">
      <Copy SourceFiles="$(TargetDir)\$(TargetName).dll" DestinationFolder="$(GamePath)\smapi-internal" />
      <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)\smapi-internal" />
      <Copy SourceFiles="$(TargetDir)\$(TargetName).xml" DestinationFolder="$(GamePath)\smapi-internal" />
  </Target>
  <Target Name="CopyToolkitCoreInterfaces" Condition="'$(MSBuildProjectName)' == 'SMAPI.Toolkit.CoreInterfaces' AND $(TargetFramework) == 'net4.5'" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="$(TargetDir)\$(TargetName).dll" DestinationFolder="$(GamePath)\smapi-internal" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)\smapi-internal" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).xml" DestinationFolder="$(GamePath)\smapi-internal" />
  </Target>

  <!-- launch SMAPI through Visual Studio -->
  <PropertyGroup>
    <StartAction>Program</StartAction>
    <StartProgram>$(GamePath)\StardewModdingAPI.exe</StartProgram>
    <StartWorkingDirectory>$(GamePath)</StartWorkingDirectory>
  </PropertyGroup>

  <!-- Somehow this makes Visual Studio for Mac recognise the previous section. Nobody knows why. -->
  <PropertyGroup Condition="'$(RunConfiguration)' == 'Default'" />
</Project>
